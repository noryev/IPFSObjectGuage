{"ast":null,"code":"var _jsxFileName = \"/Users/liet/Documents/GitHub/ipfsObjectAnalyzer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cid, setCid] = useState('');\n  const [message, setMessage] = useState('');\n  const [contentType, setContentType] = useState(''); // State for content type\n  const [responseTime, setResponseTime] = useState(null); // New state for response time\n\n  async function processCID() {\n    try {\n      const response = await fetch('https://worker-ipfs-analyze.deanlaughing.workers.dev/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cid\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Worker responded with status: ${response.status}`);\n      }\n      const result = await response.json();\n      setMessage(result.message);\n      if (result.contentType) {\n        // If content type is available in response\n        setContentType(result.contentType);\n      }\n      if (result.responseTime) {\n        // If responseTime is available in response\n        setResponseTime(result.responseTime);\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"IPFS Object Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/cidinspector.png`,\n        alt: \"Analyzer\",\n        className: \"cidinspector-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter IPFS CID\",\n        value: cid,\n        onChange: e => setCid(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processCID,\n        children: \"Analyze CID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), contentType && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Content Type: \", contentType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 26\n      }, this), \"  \", responseTime !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" HTTP Gateway Response Time: \", responseTime, \" ms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 36\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KU1hypW9LVpQAHTErIP2UuEx9eM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","cid","setCid","message","setMessage","contentType","setContentType","responseTime","setResponseTime","processCID","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","result","json","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","process","env","PUBLIC_URL","alt","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/liet/Documents/GitHub/ipfsObjectAnalyzer/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [cid, setCid] = useState('');\n  const [message, setMessage] = useState('');\n  const [contentType, setContentType] = useState('');  // State for content type\n  const [responseTime, setResponseTime] = useState(null);  // New state for response time\n\n  async function processCID() {\n    try {\n      const response = await fetch('https://worker-ipfs-analyze.deanlaughing.workers.dev/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ cid }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Worker responded with status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      setMessage(result.message);\n      if (result.contentType) {   // If content type is available in response\n        setContentType(result.contentType);\n      }\n      if (result.responseTime) {  // If responseTime is available in response\n        setResponseTime(result.responseTime);\n      }\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>IPFS Object Analyzer</h1>\n        <img src={`${process.env.PUBLIC_URL}/cidinspector.png`} alt=\"Analyzer\" className=\"cidinspector-image\" />\n        <input\n          type=\"text\"\n          placeholder=\"Enter IPFS CID\"\n          value={cid}\n          onChange={e => setCid(e.target.value)}\n        />\n        <button onClick={processCID}>Analyze CID</button>\n        \n        <p>{message}</p>\n        { contentType && <p>Content Type: {contentType}</p> }  {/* Display content type if available */}\n        { responseTime !== null && <p> HTTP Gateway Response Time: {responseTime} ms</p> }  {/* Display response time if available */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
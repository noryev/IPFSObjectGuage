{"ast":null,"code":"var _jsxFileName = \"/Users/liet/Documents/GitHub/ipfsObjectAnalyzer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cid, setCid] = useState(''); // To store the CID from the input\n  const [message, setMessage] = useState(''); // To store messages or results from the worker\n  const [workerResponse, setWorkerResponse] = useState(''); // To store the response from pinging the worker\n\n  async function processCID() {\n    try {\n      const response = await fetch('https://worker-ipfs-analyze.deanlaughing.workers.dev/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cid\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Worker responded with status: ${response.status}`);\n      }\n      const result = await response.json();\n      setMessage(result.message);\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  }\n  async function pingWorker() {\n    try {\n      // The bit of code that makes sure cors doesnt give AF... 'no-cors' subject the server to no cors protection. \n\n      const response = await fetch('https://worker-ipfs-analyze.deanlaughing.workers.dev/ping', {\n        // Set mode to 'no-cors' \n      });\n\n      // Never forget this code that makes CORS not give AF!\n\n      if (response.status !== 0) {\n        // no-cors mode responses have an \"opaque\" status of 0\n        throw new Error(`Unexpected status: ${response.status}`);\n      }\n      setWorkerResponse('Ping successful, but response is opaque due to no-cors mode');\n    } catch (error) {\n      setWorkerResponse('Error connecting to worker');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"IPFS CID Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter IPFS CID\",\n        value: cid,\n        onChange: e => setCid(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processCID,\n        children: \"Analyze CID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${message.includes('100') ? 100 : 0}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pingWorker,\n        children: \"Ping Worker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Worker says: \", workerResponse]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jZoCqtb+bSB+ZyfD8pqJmokMmfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","cid","setCid","message","setMessage","workerResponse","setWorkerResponse","processCID","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","result","json","error","pingWorker","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","width","includes","_c","$RefreshReg$"],"sources":["/Users/liet/Documents/GitHub/ipfsObjectAnalyzer/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [cid, setCid] = useState(''); // To store the CID from the input\n  const [message, setMessage] = useState(''); // To store messages or results from the worker\n  const [workerResponse, setWorkerResponse] = useState(''); // To store the response from pinging the worker\n\n  async function processCID() {\n    try {\n      const response = await fetch('https://worker-ipfs-analyze.deanlaughing.workers.dev/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ cid }),\n     \n      });\n\n      if (!response.ok) {\n        throw new Error(`Worker responded with status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      setMessage(result.message);\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  }\n\n  async function pingWorker() {\n    try {\n\n      // The bit of code that makes sure cors doesnt give AF... 'no-cors' subject the server to no cors protection. \n\n      const response = await fetch('https://worker-ipfs-analyze.deanlaughing.workers.dev/ping', {\n         // Set mode to 'no-cors' \n      });\n\n      // Never forget this code that makes CORS not give AF!\n      \n      if (response.status !== 0) {  // no-cors mode responses have an \"opaque\" status of 0\n        throw new Error(`Unexpected status: ${response.status}`);\n      }\n\n      setWorkerResponse('Ping successful, but response is opaque due to no-cors mode');\n    } catch (error) {\n      setWorkerResponse('Error connecting to worker');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>IPFS CID Analyzer</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Enter IPFS CID\"\n          value={cid}\n          onChange={e => setCid(e.target.value)}\n        />\n        <button onClick={processCID}>Analyze CID</button>\n        <div className=\"progress\" style={{ width: `${message.includes('100') ? 100 : 0}%` }}></div>\n        <p>{message}</p>\n        <button onClick={pingWorker}>Ping Worker</button>\n        <p>Worker says: {workerResponse}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
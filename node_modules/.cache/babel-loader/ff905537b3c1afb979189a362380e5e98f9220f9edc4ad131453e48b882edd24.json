{"ast":null,"code":"var _jsxFileName = \"/Users/liet/Documents/GitHub/ipfsObjectAnalyzer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cid, setCid] = useState('');\n  const [message, setMessage] = useState('');\n  const [workerResponse, setWorkerResponse] = useState('');\n  async function processCID() {\n    if (!cid.trim()) {\n      setMessage('Please enter a CID before analyzing.');\n      return;\n    }\n    try {\n      cbafybeicr2x7f35odaw2gpfx4gq7fbhnv2vmskvjve3yhtf2l3bvepfu47q;\n      if (!response.ok) {\n        throw new Error(`Worker responded with status: ${response.status}`);\n      }\n      const result = await response.json();\n      setMessage(result.message);\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  }\n  async function pingWorker() {\n    try {\n      const response = await fetch('https://worker-ipfs-analyze.deanlaughing.workers.dev/ping');\n      if (response.status !== 200) {\n        throw new Error(`Unexpected status: ${response.status}`);\n      }\n      const pong = await response.text();\n      setWorkerResponse(pong);\n    } catch (error) {\n      setWorkerResponse('Error connecting to worker');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"IPFS CID Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter IPFS CID\",\n        value: cid,\n        onChange: e => setCid(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processCID,\n        children: \"Analyze CID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${message.includes('100') ? 100 : 0}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pingWorker,\n        children: \"Ping Worker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Worker says: \", workerResponse]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jZoCqtb+bSB+ZyfD8pqJmokMmfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","cid","setCid","message","setMessage","workerResponse","setWorkerResponse","processCID","trim","cbafybeicr2x7f35odaw2gpfx4gq7fbhnv2vmskvjve3yhtf2l3bvepfu47q","response","ok","Error","status","result","json","error","pingWorker","fetch","pong","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","width","includes","_c","$RefreshReg$"],"sources":["/Users/liet/Documents/GitHub/ipfsObjectAnalyzer/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [cid, setCid] = useState('');\n  const [message, setMessage] = useState('');\n  const [workerResponse, setWorkerResponse] = useState('');\n\n  async function processCID() {\n    if (!cid.trim()) {\n      setMessage('Please enter a CID before analyzing.');\n      return;\n    }\n\n    try {\n      cbafybeicr2x7f35odaw2gpfx4gq7fbhnv2vmskvjve3yhtf2l3bvepfu47q\n\n      if (!response.ok) {\n        throw new Error(`Worker responded with status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      setMessage(result.message);\n    } catch (error) {\n      setMessage(`Error: ${error.message}`);\n    }\n  }\n\n  async function pingWorker() {\n    try {\n      const response = await fetch('https://worker-ipfs-analyze.deanlaughing.workers.dev/ping');\n\n      if (response.status !== 200) {\n        throw new Error(`Unexpected status: ${response.status}`);\n      }\n\n      const pong = await response.text();\n      setWorkerResponse(pong);\n    } catch (error) {\n      setWorkerResponse('Error connecting to worker');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>IPFS CID Analyzer</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Enter IPFS CID\"\n          value={cid}\n          onChange={e => setCid(e.target.value)}\n        />\n        <button onClick={processCID}>Analyze CID</button>\n        <div className=\"progress\" style={{ width: `${message.includes('100') ? 100 : 0}%` }}></div>\n        <p>{message}</p>\n        <button onClick={pingWorker}>Ping Worker</button>\n        <p>Worker says: {workerResponse}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}